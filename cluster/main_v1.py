from threading import Thread
from concurrent.futures import ProcessPoolExecutor

from Utils.apkNoMainManager import ApkNoMainManager
from Utils.tongManager import TongManager
import time
from Utils.Libs.jobs import createDirDexFolders
from Utils.Libs.Data import num_core,base_path_dex
from Utils.workerJobs import work
from Utils.Libs.Data import sizeShaList




if __name__ == '__main__': 
    start_time = time.time()

    createDirDexFolders()
    
    pathDexList = [base_path_dex+str(core) for core in range(num_core)]

    apkNoMainManager = ApkNoMainManager()
    tongManager = TongManager(sizeShaList)

    # create a threadpool with num_core threads
    pool = [Thread(target=work, args=[tongManager, apkNoMainManager, core, dexpath]) for core, dexpath in enumerate(pathDexList)]
    for t in pool:
        t.start()

    for t in pool:
        t.join()
    print("Process finished --- %s seconds ---" % (time.time() - start_time))
    
