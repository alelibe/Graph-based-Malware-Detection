from torch_geometric.data import Batch


def create_batch_data(one_batch: Batch):
    acfg_list = []
    acfg_position = [0]
    acfg_count = 0
    
    assert len(one_batch.external_list) == len(one_batch.function_edges) == len(one_batch.local_acfgs) == len(one_batch.hash), "size of each component must be equal to each other"
    
    for item in one_batch.local_acfgs:
        for acfg in item:
            # print("acfg: ", acfg)
            acfg_list.append(acfg)
        acfg_count += len(item)
        # print("acfg_count ", acfg_count)
        acfg_position.append(acfg_count)
    
    if len(one_batch.local_acfgs) == 1 and len(one_batch.local_acfgs[0]) == 0:
        return (None for _ in range(6))
    else:
        acfg_batch = Batch.from_data_list(acfg_list)
        return acfg_batch, acfg_position, one_batch.hash, one_batch.external_list, one_batch.function_edges, one_batch.targets