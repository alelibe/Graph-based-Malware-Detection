import json
import os
import csv


def checkApkFailed():
    tong_path = os.path.join("/home","laser","src","tong.csv")
    with open(tong_path, encoding='utf-8-sig') as f:
        list_sha = list(csv.reader(f))[1:50925]
        list_sha = [item[1] for item in list_sha]


    apk_noMain_path = os.path.join("/home","laser","apk_noMain.json")
    with open(apk_noMain_path) as list_apk:
        apk_noMain = json.load(list_apk)

    print(len(apk_noMain))
    #print(type(apk_noMain))
    shaFailed = []
    graph_path = os.path.join("/home","laser","Dataset","Graphs")
    for sha in list_sha:
        pathgraph = os.path.join(graph_path,sha)
        if not (sha in apk_noMain) and not(os.path.exists(pathgraph)):
            shaFailed.append(sha)

    print(shaFailed)
    print(len(shaFailed))

    return apk_noMain,shaFailed



def checkFCG():
    folder = "/home/laser/Dataset/Graphs/"
    list_noFCG = []
    for file in os.listdir(folder):
        pathApk = os.path.join(folder,file).replace("\\","/")
        pathfcg = os.path.join(pathApk,"fcg.json").replace("\\","/")
        if not os.path.exists(pathfcg):
            list_noFCG.append(file)

    print(len(list_noFCG))

    return list_noFCG


apkNoMain,shaFailed = checkApkFailed()
noFCG = checkFCG()
list_failed = apkNoMain + shaFailed + noFCG
print(len(list_failed))
with open("./apkFailed.json", "w") as jsonFile:
    json.dump(list_failed, jsonFile)